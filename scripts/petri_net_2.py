#!/usr/bin/env python

import rospy
import snakes.plugins
snakes.plugins.load("gv", "snakes.nets", "nets")
from nets import *

def plan (weight, init=[1]) :
	sequence = PetriNet("sequence")
	sequence.add_place(Place("Capture Bottom", init))
	sequence.add_place(Place("Cutting 1", []))
	sequence.add_place(Place("Flip 1", []))
	sequence.add_place(Place("Capture Top", []))
	sequence.add_place(Place("Cut Cover", []))
	sequence.add_place(Place("Capture keyboard", []))
	sequence.add_place(Place("Cut Screws", []))
	sequence.add_place(Place("Cut Keyboard", []))
	sequence.add_place(Place("Pick Cover", []))
	sequence.add_place(Place("Pick Keyboard", []))
	sequence.add_place(Place("Capture Middle", []))
	sequence.add_place(Place("Flip 2", []))
	sequence.add_place(Place("Screw Loosen", []))
	sequence.add_place(Place("Cut Screws 2", []))
	sequence.add_place(Place("Pick Hard Disk", []))
	sequence.add_place(Place("Pick Fan", []))
	sequence.add_place(Place("Pick CD ROM", []))
	sequence.add_place(Place("Pick Motherboard", []))
	sequence.add_place(Place("Cut Motherboard", []))
	sequence.add_place(Place("Pick Motherboard 2", []))
	sequence.add_place(Place("Finished", []))
	sequence.add_place(Place("Error Wait", []))
    
	screws = Transition("screws")
	cut_done = Transition("cut done")
	flip_done = Transition("flip done")
	cover_only = Transition("cover only")
	cut_done_3 = Transition("cut done 3")
	screws_2 = Transition("screws 2")
	keyboard_and_cover = Transition("keyboard and cover")
	no_screws = Transition("no screws")
	cut_done_4 = Transition("cut done 4")
	cut_done_2 = Transition("cut done 2")
	pick_done = Transition("pick done")
	pick_done_2 = Transition("pick done 2")
	pick_failed = Transition("pick failed")
	pick_failed_2 = Transition("pick failed 2")	
	flip_done_2 = Transition("flip done 2")
	screws_3 = Transition("screws 3")
	screw_fail = Transition("screw fail")
	loose_success = Transition("loose success")
	cut_done_5 = Transition("cut done 5")
	pick_done_3 = Transition("pick done 3")
	pick_done_4 = Transition("pick done 4")
	pick_done_5 = Transition("pick done 5")
	pick_done_6 = Transition("pick done 6")
	pick_failed_3 = Transition("pick failed 3")
	cut_done_6 = Transition("cut done 6")
	pick_failed_4 = Transition("pick failed 4")
	reset = Transition("reset")
	pick_done_7 = Transition("pick done 7")
	cont = Transition("cont")

	sequence.add_transition(screws)
	sequence.add_transition(cut_done)
	sequence.add_transition(flip_done)
	sequence.add_transition(cover_only)
	sequence.add_transition(cut_done_3)
	sequence.add_transition(screws_2)
	sequence.add_transition(keyboard_and_cover)
	sequence.add_transition(no_screws)
	sequence.add_transition(cut_done_4)
	sequence.add_transition(cut_done_2)
	sequence.add_transition(pick_done)
	sequence.add_transition(pick_done_2)
	sequence.add_transition(pick_failed)
	sequence.add_transition(pick_failed_2)
	sequence.add_transition(flip_done_2)
	sequence.add_transition(screws_3)
	sequence.add_transition(screw_fail)
	sequence.add_transition(loose_success)
	sequence.add_transition(cut_done_5)
	sequence.add_transition(pick_done_3)
	sequence.add_transition(pick_done_4)
	sequence.add_transition(pick_done_5)
	sequence.add_transition(pick_done_6)
	sequence.add_transition(pick_failed_3)
	sequence.add_transition(cut_done_6)
	sequence.add_transition(pick_failed_4)
	sequence.add_transition(reset)
	sequence.add_transition(pick_done_7)
	sequence.add_transition(cont)

	sequence.add_input("Capture Bottom", "screws", weight)
	sequence.add_input("Cutting 1", "cut done", weight)
	sequence.add_input("Flip 1", "flip done", weight)
	sequence.add_input("Capture Top", "cover only", weight)
	sequence.add_input("Cut Cover", "cut done 3", weight)
	sequence.add_input("Capture keyboard", "screws 2", weight)
	sequence.add_input("Capture Top", "keyboard and cover", weight)
	sequence.add_input("Capture keyboard", "no screws", weight)
	sequence.add_input("Cut Screws", "cut done 4", weight)
	sequence.add_input("Cut Keyboard", "cut done 2", weight)
	sequence.add_input("Pick Keyboard", "pick done", weight)
	sequence.add_input("Pick Cover", "pick done 2", weight)
	sequence.add_input("Pick Keyboard", "pick failed", weight)
	sequence.add_input("Pick Cover", "pick failed 2", weight)
	sequence.add_input("Flip 2", "flip done 2", weight)
	sequence.add_input("Capture Middle", "screws 3", weight)
	sequence.add_input("Screw Loosen", "screw fail", weight)
	sequence.add_input("Screw Loosen", "loose success", weight)
	sequence.add_input("Cut Screws 2", "cut done 5", weight)
	sequence.add_input("Pick Hard Disk", "pick done 3", weight)
	sequence.add_input("Pick Fan", "pick done 4", weight)
	sequence.add_input("Pick CD ROM", "pick done 5", weight)
	sequence.add_input("Pick Motherboard", "pick done 6", weight)
	sequence.add_input("Pick Motherboard", "pick failed 3", weight)
	sequence.add_input("Cut Motherboard", "cut done 6", weight)
	sequence.add_input("Pick Motherboard 2", "pick failed 4", weight)
	sequence.add_input("Error Wait", "reset", weight)
	sequence.add_input("Pick Motherboard 2", "pick done 7", weight)
	sequence.add_input("Finished", "cont", weight)

	sequence.add_output("Cutting 1", "screws", weight)
	sequence.add_output("Flip 1", "cut done", weight)
	sequence.add_output("Capture Top", "flip done", weight)
	sequence.add_output("Cut Cover", "cover only", weight)
	sequence.add_output("Capture keyboard", "cut done 3", weight)
	sequence.add_output("Cut Screws", "screws 2", weight)
	sequence.add_output("Cut Keyboard", "keyboard and cover", weight)
	sequence.add_output("Pick Cover", "no screws", weight)
	sequence.add_output("Pick Cover", "cut done 4", weight)
	sequence.add_output("Pick Keyboard", "cut done 2", weight)
	sequence.add_output("Cut Cover", "pick done", weight)
	sequence.add_output("Capture Middle", "pick done 2", weight)
	sequence.add_output("Flip 2", "pick failed", weight)
	sequence.add_output("Flip 2", "pick failed 2", weight)
	sequence.add_output("Capture Bottom", "flip done 2", weight)
	sequence.add_output("Screw Loosen", "screws 3", weight)
	sequence.add_output("Cut Screws 2", "screw fail", weight)
	sequence.add_output("Pick Hard Disk", "loose success", weight)
	sequence.add_output("Pick Hard Disk", "cut done 5", weight)
	sequence.add_output("Pick Fan", "pick done 3", weight)
	sequence.add_output("Pick CD ROM", "pick done 4", weight)
	sequence.add_output("Pick Motherboard", "pick done 5", weight)
	sequence.add_output("Finished", "pick done 6", weight)
	sequence.add_output("Cut Motherboard", "pick failed 3", weight)
	sequence.add_output("Pick Motherboard 2", "cut done 6", weight)
	sequence.add_output("Error Wait", "pick failed 4", weight)
	sequence.add_output("Capture Bottom", "reset", weight)
	sequence.add_output("Finished", "pick done 7", weight)
	sequence.add_output("Capture Bottom", "cont", weight)

	return sequence

rospy.init_node('petri_net')

net = plan(Value(1))
net.draw("value-0.png")
#print modes
#trans.fire(modes[0])
#net.draw("value-1.png")
